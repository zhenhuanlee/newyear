! function(e) {
    function t(s) {
        if (i[s]) return i[s].exports;
        var n = i[s] = {
            i: s,
            l: !1,
            exports: {}
        };
        return e[s].call(n.exports, n, n.exports, t), n.l = !0, n.exports
    }
    var i = {};
    t.m = e, t.c = i, t.d = function(e, i, s) {
        t.o(e, i) || Object.defineProperty(e, i, {
            configurable: !1,
            enumerable: !0,
            get: s
        })
    }, t.n = function(e) {
        var i = e && e.__esModule ? function() {
            return e.default
        } : function() {
            return e
        };
        return t.d(i, "a", i), i
    }, t.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, t.p = "", t(t.s = 1)
}([function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = {
        type: {
            isArray: function(e) {
                return e && (e.constructor === Array || "[object Array]" === ots.call(e))
            },
            isObject: function(e) {
                return e && (e.constructor === Object || "[object Object]" === ots.call(e))
            },
            isBoolean: function(e) {
                return (!1 === e || e) && e.constructor === Boolean
            },
            isNumber: function(e) {
                return (0 === e || e) && e.constructor === Number
            },
            isUndefined: function(e) {
                return void 0 === e
            },
            isNull: function(e) {
                return null === e
            },
            isFunction: function(e) {
                return e && e.constructor === Function
            },
            isString: function(e) {
                return ("" === e || e) && e.constructor === String
            }
        },
        addEvent: function(e, t, i) {
            e.addEventListener ? e.addEventListener(t, i, !1) : e.attachEvent ? (t = "on" + t, e.attachEvent(t, i)) : e["on" + t] = i
        },
        hasClass: function(e, t) {
            if (e) {
                return new RegExp("(?:^|\\s+)" + t + "(?:\\s+|$)").test(e.className)
            }
        },
        addClass: function(e, t) {
            e && (this.hasClass(e, t) || (e.className = [e.className, t].join(" ")))
        },
        removeClass: function(e, t) {
            if (e && this.hasClass(e, t)) {
                var i = new RegExp("(?:^|\\s+)" + t + "(?:\\s+|$)", "g"),
                    s = e.className;
                e.className = s.replace(i, " ")
            }
        },
        toggleClass: function(e, t) {
            this.hasClass(e, t) ? this.removeClass(e, t) : this.addClass(e, t)
        },
        replaceClass: function(e, t, i) {
            if (e && this.hasClass(e, t)) {
                var s = new RegExp("(?:^|\\s+)" + t + "(?:\\s+|$)", "g"),
                    n = e.className;
                e.className = n.replace(s, " " + i)
            }
        }
    };
    t.default = s
}, function(e, t, i) {
    "use strict";

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function n(e) {
        if (Array.isArray(e)) {
            for (var t = 0, i = Array(e.length); t < e.length; t++) i[t] = e[t];
            return i
        }
        return Array.from(e)
    }

    function r(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var s = t[i];
                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
                }
            }
            return function(t, i, s) {
                return i && e(t.prototype, i), s && e(t, s), t
            }
        }(),
        o = i(2),
        h = s(o),
        l = i(4),
        u = s(l),
        c = i(0),
        f = s(c),
        d = function() {
            function e(t) {
                r(this, e), this.scene = new h.default(t.context), this.roleNumber = 0, this.roles = {}, this.animationStacks = {}, this.ruleLists = {}, this.replaceOrWait = ""
            }
            return a(e, [{
                key: "addRole",
                value: function(e, t, i) {
                    var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                        ifEase: !1
                    };
                    if (this.roles.hasOwnProperty(e.roleName)) return console.warn("duplicate names for one scene is not allowed"), -1;
                    var n = new u.default(e);
                    n.setEaseType(s.ifEase, s.easeFunction), n.playTo(t[0], t[1], t[2], t[3]), n.setPos(i.x, i.y), this.scene.addObj(n), this.roles[e.roleName] = n, this.roleNumber += 1
                }
            }, {
                key: "roleNumbers",
                value: function() {
                    return this.roleNumber
                }
            }, {
                key: "setVector",
                value: function(e) {
                    if (e) this.roles[e].setVector(!0);
                    else {
                        var t = !0,
                            i = !1,
                            s = void 0;
                        try {
                            for (var n, r = this.roles[Symbol.iterator](); !(t = (n = r.next()).done); t = !0) {
                                n.value.setVector(!0)
                            }
                        } catch (e) {
                            i = !0, s = e
                        } finally {
                            try {
                                !t && r.return && r.return()
                            } finally {
                                if (i) throw s
                            }
                        }
                    }
                }
            }, {
                key: "removeVector",
                value: function(e) {
                    if (e) this.roles[e].setVector(!1);
                    else {
                        var t = !0,
                            i = !1,
                            s = void 0;
                        try {
                            for (var n, r = this.roles[Symbol.iterator](); !(t = (n = r.next()).done); t = !0) {
                                n.value.setVector(!1)
                            }
                        } catch (e) {
                            i = !0, s = e
                        } finally {
                            try {
                                !t && r.return && r.return()
                            } finally {
                                if (i) throw s
                            }
                        }
                    }
                }
            }, {
                key: "showFPS",
                value: function(e) {
                    this.scene.showFPS(e)
                }
            }, {
                key: "hideFPS",
                value: function() {
                    this.scene.hideFPS()
                }
            }, {
                key: "pause",
                value: function(e) {
                    if (!e) return void this.scene.pause();
                    e.hasOwnProperty("roleName") ? e.hasOwnProperty("value") ? this.roles[e.roleName].pause(e.value) : this.roles[e.roleName].pause() : this.scene.pause(e.value)
                }
            }, {
                key: "clear",
                value: function() {
                    this.scene.clear()
                }
            }, {
                key: "mapKeyToAni",
                value: function(e, t, i) {
                    function s(e) {
                        if ("keydown" === l ? i.beforeKeyDown && i.beforeKeyDown(e) : i.beforeKeyUp && i.beforeKeyUp(e), -1 !== Object.keys(c.ruleLists).indexOf(e.key))
                            for (var t = c.ruleLists[e.key].rules, s = 0; s < t.length; s += 1) "wait" === c.replaceOrWait && c.animationStacks.hasOwnProperty(t[s].role) ? c.animationStacks[t[s].role].push([].concat(n(t[s].action))) : c.animationStacks[t[s].role] = [
                                [].concat(n(t[s].action))
                            ];
                        "keydown" === l ? i.afterKeyDown && i.afterKeyDown(e) : i.afterKeyUp && i.afterKeyUp(e)
                    }

                    function r(e) {
                        "keydown" === u ? i.beforeKeyDown && i.beforeKeyDown(e) : i.beforeKeyUp && i.beforeKeyUp(e), "keydown" === u ? i.afterKeyDown && i.afterKeyDown(e) : i.afterKeyUp && i.afterKeyUp(e)
                    }
                    var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "wait";
                    for (var o in e)
                        if (e.hasOwnProperty(o))
                            if (this.ruleLists.hasOwnProperty(o))
                                for (var h = 0; h < e[o].rules; h += 1) {
                                    this.ruleLists[o].push(e[o].rules[h])
                                } else this.ruleLists[o] = e[o];
                    this.replaceOrWait = a;
                    var l = t,
                        u = "keydown" === t ? "keyup" : "keydown",
                        c = this;
                    // debugger
                    f.default.addEvent(window, l, s), f.default.addEvent(window, u, r)
                }
            }, 
//  xxx
            {
                key: "combo",
                value: function(e, t, i) {
                    function s(e) {
                        if ("keydown" === l ? i.beforeKeyDown && i.beforeKeyDown(e) : i.beforeKeyUp && i.beforeKeyUp(e), -1 !== Object.keys(c.ruleLists).indexOf(e.key))
                            for (var t = c.ruleLists[e.key].rules, s = 0; s < t.length; s += 1) "wait" === c.replaceOrWait && c.animationStacks.hasOwnProperty(t[s].role) ? c.animationStacks[t[s].role].push([].concat(n(t[s].action))) : c.animationStacks[t[s].role] = [
                                [].concat(n(t[s].action))
                            ];
                        "keydown" === l ? i.afterKeyDown && i.afterKeyDown(e) : i.afterKeyUp && i.afterKeyUp(e)
                    }

                    function r(e) {
                        "keydown" === u ? i.beforeKeyDown && i.beforeKeyDown(e) : i.beforeKeyUp && i.beforeKeyUp(e), "keydown" === u ? i.afterKeyDown && i.afterKeyDown(e) : i.afterKeyUp && i.afterKeyUp(e)
                    }
                    var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "wait";
                    for (var o in e)
                        if (e.hasOwnProperty(o))
                            if (this.ruleLists.hasOwnProperty(o))
                                for (var h = 0; h < e[o].rules; h += 1) {
                                    this.ruleLists[o].push(e[o].rules[h])
                                } else this.ruleLists[o] = e[o];
                    this.replaceOrWait = a;
                    var l = t,
                        u = "keydown" === t ? "keyup" : "keydown",
                        c = this;
                    f.default.addEvent(window, l, s), f.default.addEvent(window, u, r)
                }
            }

            ,{
                key: "addRules",
                value: function(e) {
                    for (var t in e)
                        if (e.hasOwnProperty(t))
                            if (this.ruleLists.hasOwnProperty(t))
                                for (var i = 0; i < e[t].rules; i += 1) {
                                    this.ruleLists[t].push(e[t].rules[i])
                                } else this.ruleLists[t] = e[t]
                }
            }, {
                key: "changeReplaceOrWait",
                value: function(e) {
                    this.replaceOrWait = e
                }
            }, {
                key: "removeRules",
                value: function(e, t) {
                    if (this.ruleLists.hasOwnProperty(e))
                        if (t)
                            for (var i = 0; i < this.ruleLists[e].length; i += 1) this.ruleLists[e][i].role === t && this.ruleLists[e].splice(i, 1);
                        else delete this.ruleLists[e]
                }
            }, {
                key: "changeBoneImage",
                value: function(e, t, i, s) {
                    this.roles[e].changeBoneImage(t, i, s)
                }
            }, {
                key: "rolePlayTo",
                value: function(e, t) {
                    if (!this.roles.hasOwnProperty(e)) return console.warn("No such role in this scene"), -1;
                    "wait" === this.replaceOrWait && this.animationStacks.hasOwnProperty(e) ? this.animationStacks[e].push([t]) : this.animationStacks[e] = [
                        [].concat(n(t))
                    ]
                }
            }, {
                key: "start",
                value: function() {
                    var e = this;
                    this.scene.start(function() {
                        for (var t in e.roles)
                            if (e.roles.hasOwnProperty(t) && e.animationStacks.hasOwnProperty(t) && e.animationStacks[t].length && e.roles[t].isComplete()) {
                                var i, s = e.animationStacks[t].shift();
                                (i = e.roles[t]).playTo.apply(i, n(s))
                            }
                    })
                }
            }]), e
        }();
    t.default = d, window.AlloyStick = d, window.AlloyUtils = f.default
}, function(e, t, i) {
    "use strict";

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function n(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var s = t[i];
                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
                }
            }
            return function(t, i, s) {
                return i && e(t.prototype, i), s && e(t, s), t
            }
        }(),
        a = i(0),
        o = s(a),
        h = i(3),
        l = s(h),
        u = function() {
            function e(t) {
                n(this, e), this.context = t, this.canvas = t.canvas, this.children = [], this.cb = null, this.paused = !1, this.fps = 60, this.avgFPS = 0, this.intervalID = null
            }
            return r(e, [{
                key: "addObj",
                value: function(e) {
                    e.scene = this, this.children.push(e)
                }
            }, {
                key: "removeObj",
                value: function(e) {
                    var t = this.children.indexOf(e);
                    (t > 0 || t < this.children.length) && this.children.splice(t, 1)
                }
            }, {
                key: "showFPS",
                value: function(e) {
                    this.fpsInstance = new l.default(e)
                }
            }, {
                key: "hideFPS",
                value: function() {
                    this.fpsInstance.destory(), this.fpsInstance = void 0
                }
            }, {
                key: "start",
                value: function(e) {
                    this.cb = o.default.type.isFunction(e) ? e : null, requestAnimationFrame(this.loop.call(this))
                }
            }, {
                key: "pause",
                value: function(e) {
                    this.paused = void 0 === e ? !this.paused : e
                }
            }, {
                key: "clear",
                value: function(e, t, i, s) {
                    arguments.length >= 4 ? this.context.clearRect(e, t, i, s) : this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)
                }
            }, {
                key: "render",
                value: function(e, t) {
                    e || (e = this.context), t ? this.clear(t.x, t.y, t.width, t.height) : this.clear();
                    for (var i = 0, s = this.children.length; i < s; i++) this.children[i].render(e)
                }
            }, {
                key: "loop",
                value: function() {
                    for (var e = Date.now(), t = [], i = [], s = [], n = [], r = [], a = [], o = this, h = !1, l = 0; l < this.children.length; l++) t[l] = 0, i[l] = e, s[l] = 0, n[l] = 0, r[l] = 0, a[l] = 1e3 / this.children[l].fps;
                    return function l() {
                        for (var u = Date.now(), c = u - e, f = 0; f < o.children.length; f += 1) t[f] += 1, u - i[f] > 1e3 && (o.children[f].avgFPS = t[f], t[f] = 0, i[f] = u, s[f] = 0, n[f] = 0, r[f] = 1), o.paused || (s[f] += c, n[f] = a[f] * r[f], (o.children[f].fps >= 60 || s[f] >= n[f]) && (o.children[f].update(c), h = !0, r[f] += 1));
                        o.fpsInstance && o.fpsInstance.monitorFPS(o), h && (o.cb && o.cb(c), o.render(o.context)), e = u, requestAnimationFrame(l), h = !1
                    }
                }
            }]), e
        }();
    t.default = u
}, function(e, t, i) {
    "use strict";

    function s(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var s = t[i];
                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
                }
            }
            return function(t, i, s) {
                return i && e(t.prototype, i), s && e(t, s), t
            }
        }(),
        r = function() {
            function e(t) {
                s(this, e), t ? (this.dom = "string" == typeof t ? document.querySelector(t) : t, this.domExistBefore = !0) : this.domExistBefore = !1
            }
            return n(e, [{
                key: "monitorFPS",
                value: function(e) {
                    var t = void 0;
                    this.dom ? t = this.dom : (t = document.createElement("div"), t.id = "alloyge_monitor", t.setAttribute("style", "padding: 10px 15px;background-color:rgba(60,60,60,0.5);position:absolute;top: 0;left: 0;color: #ddd;"), document.body.appendChild(t), this.dom = t);
                    for (var i = "", s = 0; s < e.children.length; s += 1) i += e.children[s].roleName + " fps : " + e.children[s].avgFPS, s !== e.children.length - 1 && (i += "<BR/>");
                    t.innerHTML = i
                }
            }, {
                key: "destory",
                value: function() {
                    this.domExistBefore || this.dom.parentNode.removeChild(this.dom)
                }
            }]), e
        }();
    t.default = r
}, function(e, t, i) {
    "use strict";

    function s(e, t) {
        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !t || "object" != typeof t && "function" != typeof t ? e : t
    }

    function n(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    }

    function r(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var s = t[i];
                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
                }
            }
            return function(t, i, s) {
                return i && e(t.prototype, i), s && e(t, s), t
            }
        }(),
        o = i(5),
        h = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(o),
        l = Math.PI,
        u = .5 * Math.PI,
        c = l / 180,
        f = function() {
            function e(t, i, s) {
                r(this, e), this.x = t || 0, this.y = i || 0, this.rotation = s || 0, this.offR = 0, this.scaleX = 1, this.scaleY = 1, this.alpha = 1, this.frame = 1
            }
            return a(e, [{
                key: "initValue",
                value: function(e) {
                    this.x = e.x, this.y = e.y, this.rotation = e.rotation, this.scaleX = e.scaleX || 1, this.scaleY = e.scaleY || 1, this.alpha = e.alpha || 1, this.frame = e.frame || 1, this.offR = e.offR || 0
                }
            }]), e
        }(),
        d = function(e) {
            function t(e, i, n) {
                r(this, t);
                var a = s(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e, i, n));
                return a._sR = 0, a._sX = 0, a._sY = 0, a._sSX = 0, a._sSY = 0, a._sA = 0, a._dR = 0, a._dX = 0, a._dY = 0, a._dSX = 0, a._dSY = 0, a._dA = 0, a
            }
            return n(t, e), a(t, [{
                key: "betweenValue",
                value: function(e, t) {
                    this._sR = e.rotation, this._sX = e.x, this._sY = e.y, this._sSX = e.scaleX, this._sSY = e.scaleY, this._sA = e.alpha, t.offR ? this._dR = t.rotation + 360 * t.offR - this._sR : this._dR = t.rotation - this._sR, this._dR > 180 ? this._dR = this._dR - 360 : this._dR < -180 && (this._dR = this._dR + 360), this._dX = t.x - this._sX, this._dY = t.y - this._sY, this._dSX = t.scaleX - this._sSX, this._dSY = t.scaleY - this._sSY, this._dA = t.alpha - this._sA
                }
            }, {
                key: "tweenTo",
                value: function(e) {
                    this.rotation = this._sR + this._dR * e, this.x = this._sX + this._dX * e, this.y = this._sY + this._dY * e, this._dSX ? this.scaleX = this._sSX + this._dSX * e : this.scaleX = NaN, this._dSY ? this.scaleY = this._sSY + this._dSY * e : this.scaleY = NaN, this._dA ? this.alpha = this._sA + this._dA * e : this.alpha = NaN
                }
            }]), t
        }(f),
        p = function() {
            function e(t) {
                r(this, e), this.tweenNode = t, this.nodeList = [], this.delay = 0, this.transitionFrames = 0, this.totalFrames = 0, this.keyFrametotal = 0, this.loopTpye = -2, this.ease = !0, this.rate = 1, this.hasTransition = !0, this.currentPercent = 0, this.currentFrame = 0, this.isComplete = !1, this.isPause = !1, this.betweenFrame = 0, this.listEndFrame = 0
            }
            return a(e, [{
                key: "update",
                value: function(e) {
                    this.isComplete || this.isPause || (this.hasTransition ? (this.currentFrame += this.rate, this.currentPercent = this.currentFrame / this.transitionFrames, this.currentFrame %= this.transitionFrames, this.currentPercent < 1 ? this.ease && (this.currentPercent = Math.sin(this.currentPercent * u)) : (this.hasTransition = !1, -1 === this.loopTpye && (this.currentPrecent = 1, this.isComplete = !0), -2 === this.loopTpye && (0 !== this.delay && (this.currentFrame = (1 - this.delay) * this.totalFrames, this.currentPercent += this.currentFrame / this.totalFrames), this.currentPercent %= 1, this.listEndFrame = 0), -3 === this.loopTpye && (this.currentPercent = (this.currentPercent - 1) * this.transitionFrames / this.totalFrames, this.currentPercent < 1 && (this.currentPrecent %= 1, this.listEndFrame = 0)), this.updateCurrentPercent(e))) : (this.currentFrame += this.rate, this.currentPercent = this.currentFrame / this.totalFrames, this.currentFrame %= this.totalFrames, -3 === this.loopTpye && this.currentPercent >= 1 ? (this.currentPercent = 1, this.isComplete = !0) : this.currentPercent %= 1, this.updateCurrentPercent(e)), this.tweenNode.tweenTo(this.currentPercent))
                }
            }, {
                key: "updateCurrentPercent",
                value: function(e) {
                    var t = this.keyFrametotal * this.currentPercent;
                    if (t <= this.listEndFrame - this.betweenFrame || t > this.listEndFrame) {
                        this.listEndFrame = 0;
                        for (var i = 0, s = 0; t >= this.listEndFrame;) this.betweenFrame = this.nodeList[i].frame, this.listEndFrame += this.betweenFrame, s = i, ++i >= this.nodeList.length && (i = 0);
                        var n = this.nodeList[s],
                            r = this.nodeList[i];
                        this.tweenNode.betweenValue(n, r)
                    }
                    this.currentPercent = 1 - (this.listEndFrame - t) / this.betweenFrame, this.ease && (this.currentPercent = e ? e(this.currentPercent) : .5 * (1 - Math.cos(this.currentPercent * l)))
                }
            }]), e
        }(),
        y = function() {
            function e(t, i, s, n) {
                r(this, e), this.body = null, this._parent = null, this.name = i, this.display = s, this.tweenNode = new d;
                var a = n.boneDatas[t][i] || {};
                this._lockX = a.x || 0, this._lockY = a.y || 0, this._lockZ = a.z || 0, this._parentX = 0, this._parentY = 0, this._parentR = 0, this._transformX = 0, this._transformY = 0
            }
            return a(e, [{
                key: "changeImage",
                value: function(e, t) {
                    this.display.changeImage(e, t)
                }
            }, {
                key: "addChild",
                value: function(e) {
                    return e._parent = this, e
                }
            }, {
                key: "getGlobalX",
                value: function() {
                    return this._transformX + this._parentX
                }
            }, {
                key: "getGlobalY",
                value: function() {
                    return this._transformY + this._parentY
                }
            }, {
                key: "getGlobalR",
                value: function() {
                    return this.tweenNode.rotation + this._parentR
                }
            }, {
                key: "update",
                value: function() {
                    if (this._parent) {
                        this._parentX = this._parent.getGlobalX(), this._parentY = this._parent.getGlobalY(), this._parentR = this._parent.getGlobalR();
                        var e = this._lockX + this.tweenNode.x,
                            t = this._lockY + this.tweenNode.y,
                            i = Math.atan2(t, e) + this._parentR * c,
                            s = Math.sqrt(e * e + t * t);
                        this._transformX = s * Math.cos(i), this._transformY = s * Math.sin(i)
                    } else this._transformX = this.tweenNode.x, this._transformY = this.tweenNode.y;
                    this.updateDisplay()
                }
            }, {
                key: "updateDisplay",
                value: function() {
                    if (this.display) {
                        this.display.x = this._transformX + this._parentX, this.display.y = this._transformY + this._parentY;
                        var e = this.tweenNode.rotation + this._parentR;
                        e %= 360, e < 0 && (e += 360), this.display.rotation = e, isNaN(this.tweenNode.scaleX) || (this.display.scaleX = this.tweenNode.scaleX), isNaN(this.tweenNode.scaleY) || (this.display.scaleY = this.tweenNode.scaleY), isNaN(this.tweenNode.alpha) || (this.tweenNode.alpha ? (this.display.visible = !0, this.display.alpha = this.tweenNode.alpha) : this.display.visible = !1)
                    }
                }
            }]), e
        }(),
        v = function() {
            function e(t) {
                r(this, e), this.visible = !0, this.alpha = 1, this.x = 0, this.y = 0, this.boneList = [], this.boneObjs = {}, this.tweenObjs = {}, this.roleName = t.roleName, this.fps = t.fps || 60, this.avgFPS = 0, this.scene = null, this.size = 1, this.boneDatas = t.data.boneDatas, this.textureDatas = t.data.textureDatas, this.animationDatas = t.data.animationDatas;
                var i = t.data.boneDatas[t.roleName],
                    s = t.data.textureDatas[t.roleName];
                for (var n in i) {
                    var a = s[n],
                        o = new h.default(t.image, [a.x, a.y, a.width, a.height, a.originX, a.originY]),
                        l = new y(t.roleName, n, o, this);
                    l.body = this, this.boneList.push(l), this.boneObjs[n] = l, this.tweenObjs[n] = new p(l.tweenNode)
                }
                this.buildJonit()
            }
            return a(e, [{
                key: "setPos",
                value: function(e, t) {
                    this.x = e, this.y = t
                }
            }, {
                key: "setFps",
                value: function(e) {
                    this.fps = e
                }
            }, {
                key: "setFrameTotals",
                value: function(e) {
                    for (var t in this.tweenObjs) this.tweenObjs[t].totalFrames = e
                }
            }, {
                key: "setEaseType",
                value: function(e, t) {
                    for (var i in this.tweenObjs) this.tweenObjs[i].ease = e;
                    t && (this.easeFunction = t)
                }
            }, {
                key: "setSize",
                value: function(e) {
                    for (var t in this.boneObjs) this.boneObjs[t].display.size = e
                }
            }, {
                key: "isVector",
                value: function() {
                    for (var e in this.boneObjs)
                        if (!1 === this.boneObjs[e].display.isVector) return !1;
                    return !0
                }
            }, {
                key: "setVector",
                value: function(e) {
                    if (void 0 === e) this.setVector(!this.isVector());
                    else
                        for (var t in this.boneObjs) this.boneObjs[t].display.isVector = e
                }
            }, {
                key: "isComplete",
                value: function() {
                    for (var e in this.tweenObjs)
                        if (!1 === this.tweenObjs[e].isComplete) return !1;
                    return !0
                }
            }, {
                key: "isPause",
                value: function() {
                    for (var e in this.tweenObjs)
                        if (!1 === this.tweenObjs[e].isPause) return !1;
                    return !0
                }
            }, {
                key: "pause",
                value: function(e) {
                    if (void 0 === e) {
                        var t = this.isPause();
                        this.pause(!t)
                    } else
                        for (var i in this.tweenObjs) this.tweenObjs[i].isPause = e
                }
            }, {
                key: "buildJonit",
                value: function() {
                    var e = this.boneDatas[this.roleName],
                        t = this.boneObjs,
                        i = void 0,
                        s = void 0,
                        n = void 0;
                    for (var r in e) s = e[r], i = t[r], (n = t[s._parent]) && n.addChild(i)
                }
            }, {
                key: "update",
                value: function(e) {
                    for (var t = 0, i = this.boneList.length; t < i; t++) {
                        var s = this.boneList[t];
                        this.tweenObjs[s.name].update(this.easeFunction), s.update()
                    }
                }
            }, {
                key: "render",
                value: function(e) {
                    if (this.visible && this.alpha > 0) {
                        e.save(), e.translate(this.x, this.y);
                        for (var t = 0; t < this.boneList.length; t++) this.boneList[t].display._render(e);
                        e.restore()
                    }
                }
            }, {
                key: "playTo",
                value: function(e, t, i, s) {
                    var n = this.animationDatas[this.roleName][e],
                        r = new d,
                        a = new d;
                    for (var o in n)
                        if ("name" !== o && "frame" !== o) {
                            var h = this.boneObjs[o],
                                u = n[o],
                                c = this.tweenObjs[o];
                            if (c.nodeList = u.nodeList, c.delay = u.delay || 0, c.keyFrametotal = n.frame, c.totalFrames = t * (u.scale || 1), c.transitionFrames = i, c.hasTransition = !0, c.isComplete = c.isPause = !1, r.initValue(c.tweenNode), u.nodeList.length > 1)
                                if (s ? c.loopTpye = -2 : (c.loopTpye = -3, c.keyFrametotal -= 1), 0 !== c.delay) {
                                    for (var f = c.keyFrametotal * (1 - c.delay), p = 0, y = 0, v = 0, m = 0; f >= v;) m = c.nodeList[y].frame, v += m, p = y, ++y >= c.nodeList.length && (y = 0);
                                    a.betweenValue(c.nodeList[p], c.nodeList[y]);
                                    var b = 1 - (v - f) / m;
                                    c.ease && (b = this.easeFunction ? this.easeFunction(b) : .5 * (1 - Math.cos(b * l))), a.tweenTo(b)
                                } else a.initValue(n[o].nodeList[0]);
                            else a.initValue(n[o].nodeList[0]), c.loopTpye = -1;
                            h.tweenNode.betweenValue(r, a)
                        }
                }
            }, {
                key: "changeBoneImage",
                value: function(e, t, i) {
                    this.boneObjs[e].changeImage(t, i)
                }
            }]), e
        }();
    t.default = v
}, function(e, t, i) {
    "use strict";

    function s(e, t) {
        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !t || "object" != typeof t && "function" != typeof t ? e : t
    }

    function n(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    }

    function r(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    }), t.Instance = void 0;
    var a = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var s = t[i];
                    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
                }
            }
            return function(t, i, s) {
                return i && e(t.prototype, i), s && e(t, s), t
            }
        }(),
        o = i(0),
        h = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(o),
        l = t.Instance = function() {
            function e() {
                r(this, e), this.height = 0, this.width = 0, this.x = 0, this.y = 0, this.scaleX = 1, this.scaleY = 1, this.alpha = 1, this.originX = 0, this.originY = 0, this.rotation = 0, this.visible = !0, this.size = 1, this.scene = null, this.parent = null
            }
            return a(e, [{
                key: "render",
                value: function() {}
            }, {
                key: "_render",
                value: function(e) {
                    this.visible && this.alpha > 0 && (e.save(), this._transform(e), this.render(e), e.restore())
                }
            }, {
                key: "_transform",
                value: function(e) {
                    e.translate(this.x * this.size, this.y * this.size), 1 !== this.size && e.scale(this.size, this.size), this.rotation % 360 > 0 && e.rotate(this.rotation % 360 / 180 * Math.PI), 1 === this.scaleX && 1 === this.scaleY || e.scale(this.scaleX, this.scaleY), e.translate(-this.originX, -this.originY), e.globalAlpha *= this.alpha
                }
            }]), e
        }(),
        u = function(e) {
            function t(e, i) {
                r(this, t);
                var n = s(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return n.image = e, n.frame = h.default.type.isArray(i) ? i : [0, 0, e.width, e.height], n.width = n.frame[2], n.height = n.frame[3], n.originX = -n.frame[4] || 0, n.originY = -n.frame[5] || 0, n.isVector = !1, n
            }
            return n(t, e), a(t, [{
                key: "changeImage",
                value: function(e, t) {
                    this.image = e, this.frame = h.default.type.isArray(t) ? t : [0, 0, e.width, e.height], this.width = this.frame[2], this.height = this.frame[3], this.originX = -this.frame[4] || 0, this.originY = -this.frame[5] || 0
                }
            }, {
                key: "render",
                value: function(e) {
                    this.isVector ? (e.strokeStyle = "#aaa", e.strokeRect(0, 0, this.width, this.height)) : e.drawImage(this.image, this.frame[0], this.frame[1], this.frame[2], this.frame[3], 0, 0, this.width, this.height)
                }
            }]), t
        }(l);
    t.default = u
}]);